<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <link rel="stylesheet" href="@Assets["lib/bootstrap/dist/css/bootstrap.min.css"]" />
    <link rel="stylesheet" href="@Assets["app.css"]" />
    <link rel="stylesheet" href="@Assets["CarnetsdeFeria.styles.css"]" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <script src="/js/PrintTablaMud.js"></script>
    <script src="/js/PrintCarnet.js"></script>
    <ImportMap />
    <link rel="icon" type="image/png" href="favicon.png" />
    <HeadOutlet @rendermode="InteractiveServer" />
</head>

<body>
    <Routes @rendermode="InteractiveServer" />
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="/js/PrintTablaMud.js"></script>
    <script src="/js/PrintCarnet.js"></script>
 


    <script>
        let videoStream = null;

        // Cambiar el nombre de la función para que coincida con las llamadas desde C#
        window.openCamera = async function(videoElementId, canvasElementId) {
            const video = document.getElementById(videoElementId);
            const canvas = document.getElementById(canvasElementId);
            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                try {
                    videoStream = await navigator.mediaDevices.getUserMedia({ video: true });
                    video.srcObject = videoStream;
                    video.onloadedmetadata = () => {
                        video.play();
                        canvas.width = video.videoWidth;
                        canvas.height = video.videoHeight;
                    };
                } catch (err) {
                    console.error("Error al acceder a la cámara: ", err);
                    alert("No se puede acceder a la cámara. Por favor, verifica tus permisos.");
                }
            } else {
                alert("getUserMedia no es compatible con este navegador.");
            }
        };

        window.captureImage = async function(videoElementId, canvasElementId, imgElementId, textAreaId) {
            const video = document.getElementById(videoElementId);
            const canvas = document.getElementById(canvasElementId);
            const img = document.getElementById(imgElementId);
            const context = canvas.getContext('2d');
            const scaleFactor = 0.5;
            canvas.width = video.videoWidth * scaleFactor;
            canvas.height = video.videoHeight * scaleFactor;
            context.drawImage(video, 0, 0, canvas.width, canvas.height);
            const base64Image = canvas.toDataURL("image/jpeg", 0.7);
            img.src = base64Image;
            img.style.display = 'block';

            if (textAreaId) {
                document.getElementById(textAreaId).value = base64Image;
            }

            // Detener la cámara después de capturar
            if (videoStream) {
                videoStream.getTracks().forEach(track => track.stop());
                videoStream = null;
                video.srcObject = null;
            }

            return base64Image;
        };

        window.clearCapturedImage = function(imageId, textAreaId) {
            const img = document.getElementById(imageId);
            const textArea = document.getElementById(textAreaId);
            if (img) {
                img.src = '';
                img.style.display = 'none';
            }
            if (textArea) {
                textArea.value = '';
            }
        };
    </script>

</body>

</html>
